# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR)

# Skip if no files staged
if [ -z "$STAGED_FILES" ]; then
  echo "No staged files to check"
  exit 0
fi

echo "🔍 Running pre-commit checks..."

# Step 1: Format code with Prettier (only on supported files)
echo "📝 Formatting code with Prettier..."
FORMATTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx|json|md|css|html)$' || true)

if [ -n "$FORMATTABLE_FILES" ]; then
  echo "$FORMATTABLE_FILES" | xargs --no-run-if-empty npx prettier --write --ignore-unknown

  # Check if prettier made any changes and add them
  if ! git diff --quiet -- "$FORMATTABLE_FILES" 2>/dev/null; then
    echo "📝 Prettier made changes, adding formatted files..."
    echo "$FORMATTABLE_FILES" | xargs git add
  else
    echo "✅ Code already properly formatted"
  fi
else
  echo "ℹ️ No formattable files in staged changes"
fi

# Step 2: ESLint auto fix (only on JS/TS files)
echo "🔧 Running ESLint auto-fix..."
LINTABLE_FILES=$(echo "$STAGED_FILES" | grep -E '\.(js|jsx|ts|tsx)$' || true)

if [ -n "$LINTABLE_FILES" ]; then
  echo "$LINTABLE_FILES" | xargs --no-run-if-empty npx eslint --fix --quiet

  # Check if eslint made any changes and add them
  if ! git diff --quiet -- "$LINTABLE_FILES" 2>/dev/null; then
    echo "🔧 ESLint made changes, adding fixed files..."
    echo "$LINTABLE_FILES" | xargs git add
  fi
else
  echo "ℹ️ No lintable files in staged changes"
fi

# Step 3: Final ESLint check
echo "✅ Final lint check..."
if [ -n "$LINTABLE_FILES" ]; then
  echo "$LINTABLE_FILES" | xargs --no-run-if-empty npx eslint --max-warnings=0 || {
    echo "❌ ESLint errors found. Please fix them before committing."
    echo "💡 Run 'npm run lint:fix' to auto-fix issues"
    exit 1
  }
else
  echo "ℹ️ No lintable files to check"
fi

# Step 4: TypeScript check
echo "🔍 Type checking..."
npx tsc --noEmit || {
  echo "❌ TypeScript errors found. Please fix them before committing."
  echo "💡 Run 'npm run type-check' to see detailed errors"
  exit 1
}

# Step 5: Security audit
echo "🔒 Security audit..."
npm audit --audit-level=moderate || {
  echo "❌ Security vulnerabilities found. Please fix them before committing."
  echo "💡 Run 'npm audit fix' to auto-fix issues"
  exit 1
}

echo "✅ All pre-commit checks passed!"
